{"version":3,"sources":["components/Card/Card.js","components/ImageGrid/ImageGrid.js","components/Form/Form.js","components/App/App.js","redux/actions.js","redux/reducer.js","redux/store.js","index.js"],"names":["Card","url","alt","src","className","ImageGrid","props","data","urls","regular","description","id","console","log","map","item","thumb","Form","handleSubmit","handleChange","query","onSubmit","e","type","placeholder","value","onChange","style","marginLeft","connect","state","images","total","found","setAlbum","page","dispatch","a","config","headers","Authorization","axios","get","result","payload","useState","setQuery","setPage","searchItem","setSearchItem","target","preventDefault","undefined","onClick","initialState","album","reducer","action","results","prev","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87c90050.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Card = ({ url, alt }) => {\r\n  return (\r\n    <img\r\n      src={url}\r\n      className=\"col-12 col-sm-6 col-md-4 col-lg-3 pb-4\"\r\n      alt={alt}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\n\r\nconst ImageGrid = (props) => {\r\n  const data = props.data || [\r\n    { urls: { regular: \"\" }, description: \"\", id: \"\" },\r\n  ];\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        {data.map((item) => (\r\n          <Card url={item.urls.thumb} alt={item.description} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\n\r\nexport default function Form({ handleSubmit, handleChange, query }) {\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <span className=\"mb-3 d-flex my-sm-5 px-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for photos\"\r\n            className=\"form-control shadow  mb-md-0   p-sm-3 p-xs-3 rounded border-0\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            value={query}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"shadow btn btn-primary mb-md-0 px-sm-5 bg-dark border-0\"\r\n            style={{ marginLeft: \"2rem\" }}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </span>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport ImageGrid from \"../ImageGrid/ImageGrid\";\r\nimport Form from \"../Form/Form\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlbum } from \"../../redux/actions\";\r\n\r\nconst App = ({ setAlbum, data, total }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [searchItem, setSearchItem] = useState(\r\n    \"Search something to get started\"\r\n  );\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (query === \"\") {\r\n      setSearchItem(\"Random\");\r\n      setAlbum(\"Random\");\r\n    } else {\r\n      setSearchItem(query);\r\n      setAlbum(query);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const loadMore = () => {\r\n    setPage(page + 1);\r\n    setAlbum(query, page + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid p-3 p-sm-5\">\r\n      <Form\r\n        handleChange={handleChange}\r\n        handleSubmit={handleSubmit}\r\n        query={query}\r\n      />\r\n      <div className=\"container mx-0 my-4\">\r\n        <h1 className=\"mt-2 mt-sm-4\">{searchItem}</h1>\r\n        <h6 className=\"text-muted\">\r\n          {total !== undefined && total > 5000\r\n            ? `Found 5000+ images`\r\n            : `Found ${total} images`}\r\n        </h6>\r\n      </div>\r\n      <ImageGrid data={data} />\r\n      <div className=\"container d-flex justify-content-center\">\r\n        {data && total > 9 && (\r\n          <button\r\n            className=\"shadow btn btn-primary mb-md-0 px-sm-5 bg-dark border-0\"\r\n            onClick={() => {\r\n              loadMore();\r\n            }}\r\n          >\r\n            Load More\r\n          </button>\r\n        )}\r\n      </div>\r\n      <footer className=\"container d-flex justify-content-center mt-5\">\r\n        Made with ❤️ using React and Unsplash-API\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.images,\r\n  total: state.found,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlbum })(App);\r\n","import axios from \"axios\";\r\n\r\nconst setAlbum =\r\n  (query, page = 1) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        Authorization: \"Client-ID sQkvfr-6U-nMKMqorR4K1UfoedEBOGXiuJDXvGhSc7g\",\r\n      },\r\n    };\r\n\r\n    const result = await axios.get(\r\n      `https://api.unsplash.com/search/photos?query=${query}&orientation=landscape&per_page=12&page=${page}`,\r\n      config\r\n    );\r\n\r\n    //result.data -> results || total\r\n\r\n    if (page === 1) {\r\n      dispatch({\r\n        type: \"SET_ALBUM\",\r\n        payload: result.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"UPDATE_ALBUM\",\r\n        payload: result.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport { setAlbum };\r\n","const initialState = {\r\n  album: {},\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"SET_ALBUM\":\r\n      return {\r\n        ...state,\r\n        images: payload.results,\r\n        found: payload.total,\r\n      };\r\n    case \"UPDATE_ALBUM\":\r\n      const prev = [...state.images];\r\n      return {\r\n        ...state,\r\n        images: [...prev, ...payload.results],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}